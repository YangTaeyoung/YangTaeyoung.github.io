---
layout: post
title: (Python) 2차원 배열의 요소를 동일한 요소로 초기화 한 후, 배열의 요소를 바꿀 때 다른 요소가 같이 바뀌는 문제 해결
date: 2022-03-02
tags: [python]
---

안녕하세요 이번에 할 포스팅은 반성의 포스팅입니다 ㅠㅠ
<br>
이번에 코딩테스트에 응시하면서 했던 실수를 바로잡고자 하거든요!

<hr>

### 문제 정의

바로 배열의 초기화와 요소 변경에 대한 문제입니다.
<br>
저는 2차원 배열을 동일한 요소로 파이썬 배열을 초기화 하는데 이런 식으로 초기화를 진행했습니다.
{%- highlight python -%}
two_arr = [[False] * 1] * 5
{%- endhighlight -%}
이렇게 한 후 출력 결과를 살펴보면
<br>
`[False], [False], [False], [False], [False]]`
<br>
이런 출력결과가 나오는 것을 볼 수 있습니다. 
<br>
**제가 의도한 대로 잘 초기화가 되었군요!**
<br><br>
하지만 여기서 특정 배열의 요소를 바꾸어 보겠습니다.
{%- highlight python -%}
two_arr[0][0] = True
{%- endhighlight -%}
저는 아래와 같이 첫번째 배열의 요소인 `False`가 `True`로 바뀌는 것을 기대했지만,
<br>
`[[True], [False], [False], [False], [False]]`
<br><br>
실제로 출력해보면 이런 결과가 나오는 것을 볼 수 있습니다.
<br>
`[[True], [True], [True], [True], [True]]`

<hr>

### Solution

문제는 동일한 요소를 갖는 파이썬 배열을 선언할 때의 곱셈연산(`*`)에 있습니다.
<br>
곱셈연산을 통해 특정 요소를 복사할 때 1차원 배열과 같은 경우 `[False] * 5`와 같은 경우, `False` 라는 값을 복사하는 것이기 때문에 정상적인 인식하지만,
<br>
`[[False] * 1] * 5` 아래의 코드와 같이 선언된 배열을 다시 복사하는 과정에서 문제가 생깁니다.
<br>
`[[False] * 1]`와 같은 리스트 인스턴스는 `값`이 아니라 `주소`이기 때문이죠.
<br>
그래서 실제로 의도한 바와 같이 배열을 초기화하기 위해서는 for문을 통해 배열을 직접 초기화해주어야 합니다.
<br>
해당 과정속에서는 이렇게 `append()` 함수를 통해서 추가해주거나,
{%- highlight python -%}
two_arr = []
for _ in range(5):
  two_arr.append([False] * 1)
{%- endhighlight -%}
아래와 같이 리스트 컴프리핸션(`list_comprehension`)을 이용할 수 있습니다.
{%- highlight python -%}
two_arr= [[False] * 1 for _ in range(5)]
{%- endhighlight -%}
<br>
이후 출력값을 비교해보면 의도한 대로 잘 나오는 것을 볼 수 있습니다.
<br><br>
#### 결과값 
`[[True], [False], [False], [False], [False]]`

<hr>

> 이번 코딩테스트를 통해 내가 알고 있는 것이라도 다시 한번 크로스체크하는 것이 중요하다는 생각이 들었어요. 중요한 로직은 전부 구현은 했는데, 이런 곳에서 에러가 있을 줄이야..:(
> <br>
> 리스트 변수는 객체이기 때문에 `primitive type` 변수와 다르게 주소값을 갖고 있다는 점. 포스팅을 보고 계시다면 여러분도 꼭 기억하셔서 저와 같은 실수를 하지 않으시길 바랍니다!
